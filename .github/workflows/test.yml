name: "Test"

on:
  workflow_call:
    inputs:
      ref:
        description: "Git ref to checkout"
        required: false
        type: string

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        systems:
          - system: "aarch64-linux"
            runs-on: [self-hosted, linux, ARM64]
          - system: "x86_64-linux"
            runs-on: [self-hosted, linux, X64]
          - system: "aarch64-darwin"
            runs-on: [self-hosted, macOS, ARM64]
          - system: "x86_64-darwin"
            runs-on: [macos-13]
    runs-on: ${{ matrix.systems.runs-on }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ inputs.ref }}
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Configure Cachix
        uses: cachix/cachix-action@v16
        with:
          name: devenv
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Build devenv
        run: |
          path=$(nix build -L --print-out-paths)
          echo "$path/bin" >> $GITHUB_PATH
      - name: Run cargo integration tests
        run: devenv shell -- cargo test --all-features
      - name: Test tasks outside shell
        run: devenv tasks run devenv:enterShell
      - name: Run devenv-test-cli
        run: devenv shell devenv-test-cli
      - name: Run tests
        run: devenv-run-tests tests


  direnv:
    name: direnv (${{ join(matrix.systems.runs-on) }})
    strategy:
      fail-fast: false
      matrix:
        systems:
          - system: "aarch64-linux"
            runs-on: [self-hosted, linux, ARM64]
          - system: "x86_64-linux"
            runs-on: [self-hosted, linux, X64]
          - system: "aarch64-darwin"
            runs-on: [self-hosted, macOS, ARM64]
          - system: "x86_64-darwin"
            runs-on: [macos-13]
    runs-on: ${{ matrix.systems.runs-on }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ inputs.ref }}
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Configure Cachix
        uses: cachix/cachix-action@v16
        with:
          name: devenv
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Build devenv
        run: |
          path=$(nix build -L --print-out-paths)
          echo "$path/bin" >> $GITHUB_PATH
      - run: |
          mkdir -p ~/.config/direnv/
          cat > ~/.config/direnv/direnv.toml << 'EOF'
          [global]
          strict_env = true
          EOF

          devenv_dir=$PWD
          tmp="$(mktemp -d)"
          pushd "$tmp"
            nix shell nixpkgs#direnv -c devenv --override-input devenv path:$devenv_dir?dir=src/modules init
          popd

  fish-zsh:
    name: zsh/fish (${{ join(matrix.systems.runs-on) }})
    strategy:
      fail-fast: false
      matrix:
        systems:
          - system: "aarch64-linux"
            runs-on: [self-hosted, linux, ARM64]
          - system: "x86_64-linux"
            runs-on: [self-hosted, linux, X64]
          - system: "aarch64-darwin"
            runs-on: [self-hosted, macOS, ARM64]
          - system: "x86_64-darwin"
            runs-on: [macos-13]
    runs-on: ${{ matrix.systems.runs-on }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ inputs.ref }}
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Configure Cachix
        uses: cachix/cachix-action@v16
        with:
          name: devenv
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Build devenv
        run: |
          path=$(nix build -L --print-out-paths)
          echo "$path/bin" >> $GITHUB_PATH
      - name: Test devenv in fish and zsh
        run: |
          nix shell nixpkgs#zsh -c zsh -c "devenv version"
          nix shell nixpkgs#fish -c fish -c "devenv version"
